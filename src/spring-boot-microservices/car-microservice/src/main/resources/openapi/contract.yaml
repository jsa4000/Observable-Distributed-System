openapi: 3.0.3
info:
  title: Booking API
  description: Microservice API to manage bookings
  version: 1.0.0
tags:
  - name: booking-controller
    description: Booking Controller
  - name: vehicle-controller
    description: Vehicle Controller
servers:
  - url: /api/v1
paths:
  /booking:
    get:
      tags:
        - booking-controller
      summary: findAllBookings
      operationId: findAllBookings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - booking-controller
      summary: save
      operationId: saveBooking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /booking/{id}:
    get:
      tags:
        - booking-controller
      summary: findBookingById
      operationId: findBookingById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - booking-controller
      summary: deleteBooking
      operationId: deleteBooking
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vehicle:
    get:
      tags:
        - vehicle-controller
      summary: findAllVehicles
      operationId: findAllVehicles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - vehicle-controller
      summary: save
      operationId: saveVehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicle/{id}:
    get:
      tags:
        - vehicle-controller
      summary: findVehicleById
      operationId: findVehicleById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - vehicle-controller
      summary: deleteVehicle
      operationId: deleteVehicle
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    Booking:
      title: Booking
      type: object
      properties:
        active:
          type: boolean
        clientId:
          type: string
        createdAt:
          type: string
          format: date-time
        fromDate:
          type: string
          format: date-time
        id:
          type: string
        resourceId:
          type: string
    Vehicle:
      title: Vehicle
      type: object
      properties:
        brand:
          type: string
        color:
          type: string
        engineCapacity:
          type: number
          format: double
        fuel:
          type: string
        id:
          type: string
        kms:
          type: integer
          format: int32
        model:
          type: string
        seats:
          type: integer
          format: int32
        year:
          type: string
