apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "java-chart.fullname" . }}
{{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
{{- end }}
  labels:
    app.kubernetes.io/name: {{ include "java-chart.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}  
    app.kubernetes.io/version: {{ default "latest" .Values.image.tag }}  
    app.kubernetes.io/component: {{ .Values.component }}  
    app.kubernetes.io/part-of: {{ .Values.sistema }}  
    app.kubernetes.io/managed-by: {{ .Release.Service }}  
    helm.sh/chart: {{ include "java-chart.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate    
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "java-chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "java-chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ include "java-chart.name" . }}
        version: {{ .Values.image.tag }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '{{ .Values.deployment.containers.containerPort }}'
        prometheus.io/path: '/management/metrics'
        fluentbit.io/parser-{{ include "java-chart.name" . }}: javamicro
    spec:
      containers:
        - name: {{ include "java-chart.name" . }}
          image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [{{- range .Values.deployment.containers.args }}{{ printf "%s" . | quote }}, {{- end }}]
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containers.containerPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.containers.readinessProbe.path }}
              port: http
              httpHeaders:
              - name: x-b3-sampled
                value: "0"
            initialDelaySeconds: {{ .Values.deployment.containers.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.containers.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.containers.livenessProbe.path }}
              port: http
              httpHeaders:
              - name: x-b3-sampled
                value: "0"
            initialDelaySeconds: {{ .Values.deployment.containers.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.containers.livenessProbe.timeoutSeconds }}            
          resources:
            requests:
              memory: {{ .Values.deployment.containers.requests.memory }} 
              cpu: {{ .Values.deployment.containers.requests.cpu}} 
            limits:
              memory: {{ .Values.deployment.containers.limits.memory }} 
              cpu: {{ .Values.deployment.containers.limits.cpu }}
          env:
          {{- with .Values.deployment.containers.env }}          
            {{- toYaml . | nindent 10 }}
          {{- end -}}
{{- if .Values.configMap.enabled }}
          volumeMounts:
            - name: config-conf
              mountPath: /opt/app/config/
            - name: secret-conf
              mountPath: /opt/app/secrets/
      volumes:
        - name: config-conf
          configMap:
            name: {{ .Values.configMap.name }}-cm
        - name: secret-conf
          secret:
            secretName: {{ .Values.secrets.name }}-secret
{{- end }}
{{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
{{- end }}