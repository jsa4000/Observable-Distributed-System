apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "micro.fullname" . }}
  labels:
    app: {{ template "micro.name" . }}
    component: server
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "micro.name" . }}
      component: server
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "micro.name" . }}
        component: server
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: {{ template "micro.fullname" . }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        ports:
        - containerPort: 8080
          name: http
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probes.livenessPath }}
            port: {{ .Values.probes.livenessPort }}
          initialDelaySeconds: 120
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: {{ .Values.probes.readinessPath }}
            port: {{ .Values.probes.readinessPort }}
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: SERVER_PORT
          value: '8080'
        - name: SPRING_PROFILES_ACTIVE
          value: docker
        - name: SPRING_DATASOURCE_URL
          value: jdbc:{{ .Values.datasource.type }}://{{ template "micro.database" . }}:{{ .Values.datasource.port }}/{{ .Values.datasource.database }}
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "micro.fullname" . }}
              key: database-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "micro.fullname" . }}
              key: database-password
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: {{ .Values.datasource.driverClassName }}
      initContainers:
      - name: init-db-wait
        image: busybox
        command: ['sh', '-c', 'until nc -w3 -z {{ template "micro.database" . }} {{ .Values.datasource.port }}; do echo waiting for database; sleep 3; done;']
      - name: init-create-dataflow
        image: postgres:10.7-alpine
        command: ['sh', '-c',
          'PGPASSWORD={{ .Values.datasource.password }} createuser -h {{ template "micro.database" . }} -p {{ .Values.datasource.port }} -U {{ .Values.datasource.username }} {{ .Values.datasource.database }};
          PGPASSWORD={{ .Values.datasource.password }} createdb -h {{ template "micro.database" . }} -p {{ .Values.datasource.port }} -O {{ .Values.datasource.username }} -U {{ .Values.datasource.username }} {{ .Values.datasource.database }};
          echo 0']

